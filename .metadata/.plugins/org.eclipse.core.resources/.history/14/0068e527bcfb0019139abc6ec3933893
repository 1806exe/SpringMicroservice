package com.springwebservice.com.myexceptions;

import java.net.http.HttpHeaders;
import java.util.Date;

import javax.validation.OverridesAttribute;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.context.request.WebRequest;
import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;import com.springwebservice.com.bean.Person;

@ControllerAdvice
@RestController
public class PersonExceptionHandler extends ResponseEntityExceptionHandler {
	
	
	@ExceptionHandler(PersonNotFoundException.class)
	public final ResponseEntity<Object> handleMyException(Exception exception, WebRequest webRequest){
			ExceptionResponse exceptionResponse = new ExceptionResponse(new Date(), exception.getMessage(), webRequest.getDescription(false));
	return new ResponseEntity(exceptionResponse, HttpStatus.NOT_FOUND);
	}
	
	
	
//	@Override
//	protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex, HttpHeaders headers, HttpStatus status, WebRequest request){
//		ExceptionResponse exceptionResponse = new ExceptionResponse(new Date(), "Validation Failde", ex.getBindingResult().toString());
//		return new ResponseEntity(exceptionResponse)
//	}
	
	
	@Override
	protected ResponseEntity<Object> handleMethodArgumentValid(MethodArgumentNotValidException ex, HttpHeaders headers, HttpStatus status, WebRequest request){
		ExceptionResponse exceptionResponse = new ExceptionResponse(new Date(), ex.getMessage(), request.getDescription(false));
		return new ResponseEntity(exceptionResponse, HttpStatus.BAD_REQUEST);
	}
	
	
	
	@ExceptionHandler(Exception.class)
	public final ResponseEntity<Object> handleAllExceptions(Exception exception, WebRequest webRequest){
		ExceptionResponse exceptionResponse = new ExceptionResponse(new Date(), exception.getMessage(), webRequest.getDescription(false));
		
		return new ResponseEntity(exceptionResponse, HttpStatus.INTERNAL_SERVER_ERROR);
	}
}

























