<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="com.model.User"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.EnableResourceServer"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfigurerAdapter"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
<fullyQualifiedTypeName name="org.springframework.web.cors.reactive.UrlBasedCorsConfigurationSource"/>
<fullyQualifiedTypeName name="org.springframework.web.cors.CorsConfiguration"/>
<fullyQualifiedTypeName name="javax.xml.transform.Source"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
<fullyQualifiedTypeName name="javax.annotation.Resource"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
<fullyQualifiedTypeName name="java.lang.Override"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore"/>
<fullyQualifiedTypeName name="java.lang.SuppressWarnings"/>
<fullyQualifiedTypeName name="org.springframework.boot.web.servlet.FilterRegistrationBean"/>
<fullyQualifiedTypeName name="org.springframework.security.authorization.AuthenticatedReactiveAuthorizationManager"/>
<fullyQualifiedTypeName name="org.springframework.security.authorization.AuthorityReactiveAuthorizationManager"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.token.TokenStore"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerSecurityConfigurer"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer"/>
<fullyQualifiedTypeName name="rx.annotations.Beta"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.EnableAutoConfiguration"/>
<fullyQualifiedTypeName name="org.springframework.web.cors.reactive.CorsWebFilter"/>
<fullyQualifiedTypeName name="org.apache.catalina.filters.CorsFilter"/>
<fullyQualifiedTypeName name="org.springframework.web.cors.UrlBasedCorsConfigurationSource"/>
<fullyQualifiedTypeName name="org.springframework.web.filter.CorsFilter"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"/>
<fullyQualifiedTypeName name="java.lang.Exception"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.ribbon.RibbonClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMethod"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="com.beans.User"/>
<fullyQualifiedTypeName name="com.beans.Product"/>
<fullyQualifiedTypeName name="java.beans.PropertyChangeListenerProxy"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="com.proxy.UserExchangeProxy"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.ComponentScan"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.client.DefaultOAuth2ClientContext"/>
<fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.client.OAuth2RestTemplate"/>
<fullyQualifiedTypeName name="feign.RequestInterceptor"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.client.OAuth2ClientContext"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.client.resource.OAuth2ProtectedResourceDetails"/>
<fullyQualifiedTypeName name="org.springframework.cloud.security.oauth2.client.feign.OAuth2FeignRequestInterceptor"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.client.token.grant.password.ResourceOwnerPasswordResourceDetails"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.common.OAuth2AccessToken"/>
</qualifiedTypeNameHistroy>
